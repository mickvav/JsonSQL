.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "JsonSQL::Query::Query 3pm"
.TH JsonSQL::Query::Query 3pm "2017-07-29" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
JsonSQL::Query::Query \- JSON query base class. Provides the quote_identifier method for escaping table and column identifiers.
.SH "VERSION"
.IX Header "VERSION"
version 0.4
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This is a base module used to construct JsonSQL::Query modules. It is not meant to be instantiated directly.
Instead have a look at,
.IP "\(bu" 4
JsonSQL::Query::Select
.IP "\(bu" 4
JsonSQL::Query::Insert
.PP
You can also create your own subclass...
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "Constructor new($query_rulesets, $json_schema) \-> JsonSQL::Query::Query"
.el .SS "Constructor new($query_rulesets, \f(CW$json_schema\fP) \-> JsonSQL::Query::Query"
.IX Subsection "Constructor new($query_rulesets, $json_schema) -> JsonSQL::Query::Query"
Creates a JsonSQL::Validator object using the supplied \f(CW$query_rulesets\fR and \f(CW$json_schema\fR and stores a reference to use for future
validation and whitelist checking purposes. See JsonSQL::Validator for more information.
.PP
.Vb 2
\&    $query_rulesets     => The whitelist rule sets to be associated with this JsonSQL::Query object.
\&    $json_schema        => The name of the JSON schema to use for validation of the query.
.Ve
.ie n .SS "ObjectMethod quote_identifier($identifier) \-> quoted $identifier"
.el .SS "ObjectMethod quote_identifier($identifier) \-> quoted \f(CW$identifier\fP"
.IX Subsection "ObjectMethod quote_identifier($identifier) -> quoted $identifier"
Since table and column identifiers cannot be parameterized by most databases they have to be quoted. This method
is used during \s-1SQL\s0 query construction to quote non-parameterized identifiers.
.PP
.Vb 1
\&    $identifier         => The identifier string to quote.
\&
\&    Ex:
\&        Column1     => \*(AqColumn1\*(Aq
\&        Co\*(Aqlumn1    => \*(AqCo\*(Aq\*(Aqlumn1\*(Aq
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Hoefler <bhoefler@draper.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2017 by Chris Hoefler.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
